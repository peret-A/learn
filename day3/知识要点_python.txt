1. tuple 元组
	1. 为什么要学习元组
		list和元组的本质都是存储数据，但是不同的是，list存储的数据是可以，但是元组不行。
	2.形式：
		#定义元组字面量
		（元素1，元素2...）
		#定义元组变量
			变量=（元素1，元素2...）
		#定义空元组
			变量=（）
			变量=tuple()
		注：如：t=("hello") 时  t的类型是str 而不是tuple 
		    正确的写法应是 t=("hello",)  只有单个元素时逗号不能省！
			可以嵌套，和list一样可以使用下标定位对应的元素。
			如果元组元素内部嵌套一个list元素，list是可以修改的！
			
	3.包含的方法：
		1. index(元素) 查找某个元素的下标
		2. count(元素) 统计某个数据在当前元组出现的次数
		3. len（元组） 统计元组的元素个数
		注：具体的用法可以参考list1的对应方法，用法一样。
	4.遍历
		# 元组的遍历
			i =0
			t=(1,2,3,4,5,6)
			while i<len(t):
				print(t[i])
				#不要忘了添加 i+=1 要不然 陷入死循环
				i+=1
			for x in t:
				print(x)	
		注：元组和列表本身就是一个集合集，for循环不需要range（） 去遍历整形数组
	5.特点：
		1.不限制存储元素的类型
		2.长度任意（取决与内存大小）
		3.支持下标
		4.允许重复的元组存在
		5.不可修改
		6.支持循环
2. 字符串
		1.形式：变量="元素1元素2....."
		尽管看起来，字符串不像一个数据容器，但是字符串确实数据容器，因为字符串可以看成
		字符的容器，支持下标索引的特征。
		
		注：字符串是无法修改的，和元组一样可以依靠下标找到对应位置的元素，
		也无法依靠下标对其进行修改。，如果将新的数据再次赋值当前字符串 
		我们得到的是新的字符串。
		注：包含的方法我们得到的新的字符串都需要去接收才可以记录下来，
			通过下面的方法本身的字符串是不会改变的
		2.包含的方法：
				1. index(元素) 查找某个元素的下标
				2. count(元素) 统计某个数据在当前元组出现的次数
				3. len（元组） 统计元组的元素个数
				4. replace  字符串的替换
				   形式：字符串.replace（要被替换元素1，替换元素2） 
					即将要被替换元素1(可以是一个字符，也可以是一个字符串)
					成替换元素2(可以是一个字符，也可以是一个字符串)，结果返回给字符串
					注：该方法不是修改了字符串本身而是得到了一个新的字符串,
					如果要被替换的元素，字符串没有就不进行替换，也不报错
				5. split 字符串的分割
					形式：字符串.split(分隔的字符串)
					即将字符串依靠分隔字符串进行分隔如下：
					my_str="hello world"
					print(my_str)
					print(type(my_str))
					print(my_str.split(" "))
					print(type(my_str.split(" ")))
					在上面代码的四行可以看到我依靠空格进行分隔结果为：
					['hello', 'world']
					通过观察结果的形式，我们不难看出分隔后的字符串返回的类型变成list
					但是原本的字符串并没有改变
				6. strip 字符串规整操作(去掉首尾空格以及回车)
					形式： 字符串.strip()
							注：如果没有参数就默认去掉首尾空格以及回车
						   字符串.strip(字符串)
							注：如果传入了参数就依据字符串来去掉首尾符合的元素
							my_str =" 12hello world21 "
							print(my_str.strip(" 12"))
							结果为:hello world

					注：该方法不是修改了字符串本身而是得到了一个新的字符串
		3.遍历:
			形式：
				my_str="hello world"
				i=0
				while i< len(my_str):
					print(my_str[i])
					i+=1
				for x in my_str:
					print(x)
		4.特点：
			1.只可以存储字符串
			2.长度任意（取决与内存大小）
			3.支持下标
			4.允许重复的字符串存在
			5.不可修改
			6.支持循环